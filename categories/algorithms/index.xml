<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>algorithms on MP&#39;s Projects and Papers</title>
    <link>/categories/algorithms/</link>
    <description>Recent content in algorithms on MP&#39;s Projects and Papers</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Dec 2019 16:39:53 -0800</lastBuildDate>
    
	<atom:link href="/categories/algorithms/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dijkstra&#39;s Shunting Yard in Typescript</title>
      <link>/post/algorithms/shunting-yard/</link>
      <pubDate>Mon, 23 Dec 2019 16:39:53 -0800</pubDate>
      
      <guid>/post/algorithms/shunting-yard/</guid>
      <description>The shunting yard algorithm converts infix expressions (i.e. 1+2) into reverse Polish notation, i.e. 1 2 +, which lends itself well to execution on a stack machine.
An aside: I wanted to revisit this algorithm because it was one of the first I implemented in C during self-study five years ago. In a way, reimplementing it is a way of measuring my progress since then.
The internal details aren&#39;t too complicated - it&#39;s based on the simple pseudo-code of the Wikipedia article describing the shunting yard algorithm.</description>
    </item>
    
    <item>
      <title>Pythagorean Triple Problem in Sub-linear Time</title>
      <link>/post/algorithms/pythagorean-triple/</link>
      <pubDate>Sun, 10 Mar 2019 15:48:49 -0400</pubDate>
      
      <guid>/post/algorithms/pythagorean-triple/</guid>
      <description>The Pythagorean triple problem is as follows. Given an input integer \(n\), return integers \(a\), \(b\), \(c\) such that the two following conditions hold:
$$ a b c = n $$ $$ a^2 + b^2 = c^2 $$
I was interested in finding a solution to this problem that was both succint and had good asymptotic complexity. The solution I found runs in O(sqrt(n)) time by deconstructing the problem into the well-known 3SUM problem.</description>
    </item>
    
  </channel>
</rss>