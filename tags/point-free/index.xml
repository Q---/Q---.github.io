<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>point-free on Adventures in Typescript</title>
    <link>https://code.lol/tags/point-free/</link>
    <description>Recent content in point-free on Adventures in Typescript</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Mar 2022 09:34:39 -0800</lastBuildDate><atom:link href="https://code.lol/tags/point-free/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Point-free Programming via HKTs</title>
      <link>https://code.lol/post/programming/hkt-tacit/</link>
      <pubDate>Fri, 11 Mar 2022 09:34:39 -0800</pubDate>
      
      <guid>https://code.lol/post/programming/hkt-tacit/</guid>
      <description>In Typescript, point-free programming has been traditionally limited due to the difficulty the type system has representing the abstracted types associated with point-free (also called &amp;rsquo;tacit&amp;rsquo;) programming.
 1. What is Tacit Programming? 2. Type-Level Programming  2.1. The Hard (Naive) Way 2.2. Tacit Logic via HKTs   3. Addendum: Library  3.1. Basic HKT Abstractions 3.2. HKT Composition 3.3. Narrow Type Inference 3.4. Value-level Apply 3.5. Auto-applyable HKTs 3.</description>
    </item>
    
  </channel>
</rss>
