<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>number theory on Adventures in Typescript</title>
    <link>https://code.lol/tags/number-theory/</link>
    <description>Recent content in number theory on Adventures in Typescript</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 08 Dec 2022 22:58:35 -0800</lastBuildDate><atom:link href="https://code.lol/tags/number-theory/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Type-level Collatz Sequence</title>
      <link>https://code.lol/post/programming/type-level-collatz/</link>
      <pubDate>Thu, 08 Dec 2022 22:58:35 -0800</pubDate>
      
      <guid>https://code.lol/post/programming/type-level-collatz/</guid>
      <description>The Collatz conjecture is an unsolved problem in mathematics. It states that for any positive integer n, the sequence of numbers generated by the following algorithm will eventually reach 1. These are also called the hailstone numbers.
function collatz(n: number): number { return n % 2 === 0 ? n / 2 : 3 * n + 1; } The sequence generated by a given $n$ is the sequence of numbers n, collatz(n), collatz(collatz(n)), collatz(collatz(collatz(n))), and so on.</description>
    </item>
    
    <item>
      <title>Pythagorean Triple Problem in Sub-linear Time</title>
      <link>https://code.lol/post/algorithms/pythagorean-triple/</link>
      <pubDate>Sun, 10 Mar 2019 15:48:49 -0400</pubDate>
      
      <guid>https://code.lol/post/algorithms/pythagorean-triple/</guid>
      <description>The Pythagorean triple problem is as follows. Given an input integer \(n\), return integers \(a\), \(b\), \(c\) such that the two following conditions hold:
$$ a b c = n $$ $$ a^2 + b^2 = c^2 $$
I was interested in finding a solution to this problem that was both succint and had good asymptotic complexity. The solution I found runs in O(sqrt(n)) time by deconstructing the problem into the well-known 3SUM problem.</description>
    </item>
    
  </channel>
</rss>
