<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design Patterns on Codeless Code</title>
    <link>https://code.lol/tags/design-patterns/</link>
    <description>Recent content in Design Patterns on Codeless Code</description>
    <generator>Hugo 0.125.0</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 May 2020 19:41:57 -0700</lastBuildDate>
    <atom:link href="https://code.lol/tags/design-patterns/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Self Modifying Type Predicates in Typescript</title>
      <link>https://code.lol/post/programming/self-modifying-type-predicates/</link>
      <pubDate>Sun, 03 May 2020 19:41:57 -0700</pubDate>
      <guid>https://code.lol/post/programming/self-modifying-type-predicates/</guid>
      <description>Typescript&amp;rsquo;s type system is uniquely powerful among mainstream programming languages, approximating the expressive power of Haskell or Idris, while also remaining flexible enough for production applications.&#xA;Type predicates are a useful tool in building a well-typed software framework. Essentially, they allow you to &amp;ldquo;simulate&amp;rdquo; dependent types, a powerful type feature present in Idris.&#xA;Further explanation on type predicates can be found here.&#xA;The premise of this article is a usage of type predicates I haven&amp;rsquo;t seen discussed online - most type predicates just modify one of their arguments, but you can actually form a predicate on this because it is an implicit argument.</description>
    </item>
  </channel>
</rss>
