<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dijkstra on Code, lol.</title>
    <link>code.lol/tags/dijkstra/</link>
    <description>Recent content in dijkstra on Code, lol.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Dec 2019 16:39:53 -0800</lastBuildDate><atom:link href="code.lol/tags/dijkstra/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dijkstra&#39;s Shunting Yard in Typescript</title>
      <link>code.lol/post/algorithms/shunting-yard/</link>
      <pubDate>Mon, 23 Dec 2019 16:39:53 -0800</pubDate>
      
      <guid>code.lol/post/algorithms/shunting-yard/</guid>
      <description>The shunting yard algorithm converts infix expressions (i.e. 1+2) into reverse Polish notation, i.e. 1 2 +, which lends itself well to execution on a stack machine.
An aside: I wanted to revisit this algorithm because it was one of the first I implemented in C during self-study five years ago. In a way, reimplementing it is a way of measuring my progress since then.
The internal details aren&amp;rsquo;t too complicated - it&amp;rsquo;s based on the simple pseudo-code of the Wikipedia article describing the shunting yard algorithm.</description>
    </item>
    
  </channel>
</rss>
