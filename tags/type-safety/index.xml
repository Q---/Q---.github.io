<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Type Safety on Codeless Code</title>
    <link>https://code.lol/tags/type-safety/</link>
    <description>Recent content in Type Safety on Codeless Code</description>
    <generator>Hugo 0.125.0</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Oct 2022 16:45:40 -0700</lastBuildDate>
    <atom:link href="https://code.lol/tags/type-safety/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Typesafe Function Composition</title>
      <link>https://code.lol/post/programming/typesafe-function-composition/</link>
      <pubDate>Sun, 09 Oct 2022 16:45:40 -0700</pubDate>
      <guid>https://code.lol/post/programming/typesafe-function-composition/</guid>
      <description>Do ya wanna know how to type function composition in Typescript? Read on!&#xA;1. Background 1.1. Type-theoretic Pseudocode 2. Typescript 2.1. IsComposablePair 2.1.1. Type-based Pattern Matching using infer 2.1.2. IsComposablePair 2.2. Every 2.3. Pair 3. Component Synthesis 4. Function Integration 5. Future Work: Constructive Approach 1. Background Function composition is an operation that takes two functions, $f$ and $g$, and produces a new function $h$ such that $h(x) = g(f(x))$.</description>
    </item>
  </channel>
</rss>
